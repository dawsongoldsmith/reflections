When would you want to use a remote repository rather than keeping all your work
local?

    When you need to share your code with other people in order to collaborate,
    and if you needed to work on two separate devices.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because some code might not be ready, and still in development stages. If
    git pulled automatically then some premature code could be introduced and
    make the code not work anymore.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clones are used to create an exact copy of a repository on your machine,
    forks are used to give other coders credit while creating an exact copy
    that won't mess up the original coder's work. Branches are used when
    collaborating on the same project without wanting to mess with each other's work

What is the benefit of having a copy of the last known state of the remote
stored locally?

  This would allow someone to know whether or not a local repository is
  synced with the remote repository and whether or not there might be merge
  conflicts when you try to pull or push.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    You would have to work on the same machine or network which would probably
    slow down the collaborating part of a project. It would be easier because
    there would probably be less merge conflicts and communicating between the
    two coders would be more efficient, but the actual work would probably take
    longer to complete without GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When you want to create a brand new  or developmental change to your code
    without altering the working project or when collaborating with others to
    avoid messing with each others' code.
